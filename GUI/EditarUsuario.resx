<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEditar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>